name: Build book and make release

# Only trigger on push and only for frontend files
on:
  
  # Trigger on push to master (edge case, local merge)
  push:
    tags:
      - 'v*'


jobs:
  build:
    name: Compile Book

    runs-on: ubuntu-latest

    steps:

       # Clones repo to the commit that triggered the event
      - name: Cloning repository
        uses: actions/checkout@v3

      # Set up node
      - name: Set up frontend Node.js (.nvmrc)
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v3
        working-directory: compiler
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install node dependencies
        run: npm i
        working-directory: compiler

      - name: Install cli dependencies
        run: sudo apt install -y ghostscript

      - name: Build book
        run: debug=true npm start
        working-directory: compiler

      - name: Clean up temp files
        run: rm *-{pretoc,toc,content}.pdf
        working-directory: build

      - name: Zip the built files
        run: zip -r build.zip build

      - name: Create New Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Automatic build
          body: Built from ${{ github.ref }}, hash (${{ github.sha }})
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./build.zip
          asset_name: ${{github.repository}}.zip
          asset_content_type: application/zip
